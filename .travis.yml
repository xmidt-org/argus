language: go

go:
  - 1.14.x
  - tip

os:
  - linux

services:
  - docker

branches:
  only:
    - main
    - /^v[0-9]+\.[0-9]+\.[0-9]+$/

addons:
  sonarcloud:
    organization: "xmidt-org"
    token:
      secure: "AZ1M+6rd4l3TLjObHNNO9ACelsKAS3AHxVjkYWaW6Kqv3xZ3e3xQ3B1ae1WymD4fLmP6sdQ1F+aBoNs+ztvDxm1Pk+uk1yZyhBguJlMFRV4eKPHHRyhVJdbgmRrar4flJUDWh52yNgb9oL8l5S2fUljcwe9duQ8eizYyEs8/EQMXwBdnsYJLD+5L8bsjtmh2cofgha94VqfAu7Iwb77+ZgBjAKllfOOERWSQ8Xjg1r2lipYMlgVq+2bmjN2JgzHoZcHeWhf8BZPuw23adJhjQuhnJ/OhU0Lc3/tTs7isSzKWlUzOcKk5Bo2upwtEim/v33FtrULq1F8DOukZ+orrub+y781+NCJ6rSUkUGD0kR02BbWtCGRQO3dLfW08AkzzIROXqY2dGX+2t9GyYnsqapR6qA5gVWF81jdWq9/5Xo7tPHBzpmPiNgLlY6i9dvsS0FII6i+LotIqkBOM0hu1T335iLijPLf3Kpzhx0nhDn2DPiv1yo2fl0we6JiJOzwWYbBVAjIjQNMWpaxJ8D1L8j5Jz1MknOAbWHEGoepiJkOff+Tsy+MGwhKiMA1DITVRYLqAW3Y0/BWc69tzjvJ9KkWwVQ4HGNNfdw60IjdV6Cy2J6/ELefXXt4bMLoHN+9GKSf3go4bYmRqs40xtFXVeDrZ5Z10G/JO0vTyMZT+ldU="

script:
  - make style codecov
  - sonar-scanner -Dproject.settings=./.sonar-project.properties

jobs:
  fast_finish: true
  allow_failures:
    - go: tip
  include:
    # - stage: integration
    #   name: "Integration Tests"
    #   if: branch = main
    #   script:
    #     - make it
    - stage: tag
      name: "Tag For Release"
      if: branch = main && type = push
      before_script:
        - echo -e "machine github.com\n  login $GH_TOKEN" > ~/.netrc
      script:
        - export OLD_VERSION=$(make version)
        - git config --global user.name "xmidt-bot"
        - git config --global user.email "$BOT_EMAIL"
        - export TAG=$(cat CHANGELOG.md | perl -0777 -ne 'print "$1" if /.*## \[Unreleased\]\s+## \[(v\d+.\d+.\d+)\].*/s')
        - export TODAY=`date +'%m/%d/%Y'`
        - export NOTES=$(cat CHANGELOG.md | perl -0777 -ne 'print "$ENV{TODAY}\n\n$1\n" if /.*## \[$ENV{TAG}\]\s(.*?)\s+## \[(v\d+.\d+.\d+)\].*/s')
        - if [[ "$TAG" != "" && "$TAG" != "$OLD_VERSION" ]]; then git tag -a "$TAG" -m "$NOTES"; git push origin --tags; echo $?; fi
    - stage: release
      name: "Make a Release"
      if: branch != main
      script: skip
      before_deploy:
        - make release-artifacts
      deploy:
        on:
          all_branches: true
          tags: true
        provider: releases
        api_key: "$GH_TOKEN"
        file_glob: true
        file: ./.ignore/*
        skip_cleanup: true
    - stage: docker-release
      name: "Make Docker Release"
      if: branch != main
      script: skip
      deploy:
        - provider: script
          script: bash deploy/docker_push
          on:
            all_branches: true
            tags: true
