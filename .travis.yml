language: go

go:
  - 1.14.x
  - tip

os:
  - linux

services:
  - docker

branches:
  only:
    - main
    - /^v[0-9]+\.[0-9]+\.[0-9]+$/

addons:
  sonarcloud:
    organization: "xmidt-org"
    token:
      secure: "Zqk1ZXwZHj96HwlG84ypDbvMascfyableIfBkZJowwXR2UEA18iuqdzdgLKM82BA5Q7WDwz2fH2VUXfIlbGm1W8MVvnoE6koC9e72DoSE3D30hr7CUV0Cbe/8aFAYJJuKrqbshDx680nt0Caq266s62h2eckEkuYA6LZiTloLeMF6+dmYFz86b7e57DW07f85lZTErhsjinMn2e3mGEvdW9gShSW+PGABDRyocQwz2/U7x5+zYxGw0LdrKAvyFAF6r863LtlN7qIavGXaWJzGjnjIh25QiPELQO54Mxy9U11JdHb0+lHTBDHrBOpwmNkGPGzgDhVtNRKGosvjTkHrvVoWf257ljOfqXp9SPh6RWU3dfl0knku1477YPq6yhvkVFZg2VXxe6xtWm2LIIca5lTgbKGVtEsOFwiWb3rw3uqWh/xHeynRNVTDGxkhHxV3jTazdTQ5qsoLb2p1AnYKTYw7VN3NVTeo8k+AdIHM6gIzfflFzl8pew8XPsHPsQPxnchq6qtkfaUeDLSUA+SldUuREjx4Qfzs2iaHfrKP6skwPZCty5WK+uYH+8IZ5VobAPT2aOzpZDD6mBmsBvXFvUPehQm3eRSMMxOMe9xkuE71OepXTBXu7Z0VnhM/QPQTYDD7Bn5E2qxZjE9yMfLRJhl25PLnPhhc/FxyRmi6d8="

script:
  - make style codecov
  - sonar-scanner -Dproject.settings=./.sonar-project.properties

jobs:
  fast_finish: true
  allow_failures:
    - go: tip
  include:
    # - stage: integration
    #   name: "Integration Tests"
    #   if: branch = main
    #   script:
    #     - make it
    - stage: tag
      name: "Tag For Release"
      if: branch = main && type = push
      before_script:
        - echo -e "machine github.com\n  login $GH_TOKEN" > ~/.netrc
      script:
        - export OLD_VERSION=$(make version)
        - git config --global user.name "xmidt-bot"
        - git config --global user.email "$BOT_EMAIL"
        - export TAG=$(cat CHANGELOG.md | perl -0777 -ne 'print "$1" if /.*## \[Unreleased\]\s+## \[(v\d+.\d+.\d+)\].*/s')
        - export TODAY=`date +'%m/%d/%Y'`
        - export NOTES=$(cat CHANGELOG.md | perl -0777 -ne 'print "$ENV{TODAY}\n\n$1\n" if /.*## \[$ENV{TAG}\]\s(.*?)\s+## \[(v\d+.\d+.\d+)\].*/s')
        - if [[ "$TAG" != "" && "$TAG" != "$OLD_VERSION" ]]; then git tag -a "$TAG" -m "$NOTES"; git push origin --tags; echo $?; fi
    - stage: release
      name: "Make a Release"
      if: branch != main
      script: skip
      before_deploy:
        - make release-artifacts
      deploy:
        on:
          all_branches: true
          tags: true
        provider: releases
        api_key: "$GH_TOKEN"
        file_glob: true
        file: ./.ignore/*
        skip_cleanup: true
    - stage: docker-release
      name: "Make Docker Release"
      if: branch != main
      script: skip
      deploy:
        - provider: script
          script: bash deploy/docker_push
          on:
            all_branches: true
            tags: true
