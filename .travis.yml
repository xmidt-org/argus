language: go

go:
  - 1.14.x
  - tip

os:
  - linux

services:
  - docker

branches:
  only:
    - main
    - /^v[0-9]+\.[0-9]+\.[0-9]+$/

addons:
  sonarcloud:
    organization: "xmidt-org"
    token:
      secure: "aCl5zZQWOsf5K+VVIrt3KhEPzZtQoL5ebX7TxPz1ISN9FiNTTXp+WTUMxIXHjFsNYwBNLNTHdf+1F0Yy3UyPUJl+CauTZXO3cmiFeobf56DsWqX9i75CUekyR1sAeJ3fIs7Ogt3Z4N3WrSd7rKSLXLqBEjxInfnpNtuuDaMscM4eQyc42jZBLFlALDYaH2gl7czUURfq7oz6VKpcvuHo8t+BKf/uBO+lWgaIZDRl0jmAq/aAW7uqlbBOfLVNxh28BnrXzdJhd9zambwAaTVJB8gnidjQj/r5WPMA58mtVi77NAbj6YM6/xtmURlUH05s2/ERUAVtQtgTIJidxCsTb7uCZCBaZeBxpKl+6OJm+l6wB1szkAru8BCe7y6ild1IiUVE+uxxNCLwwcS70tiHrGsFGGq5lsGYWGxZpGF7HKABoFXWsiPkOWjWrd98aYalwxDL4kS/LT7dQ3UMZ2Poqy776khfTWVLSn1xR19Yv4JUru9MHh/+/DX4QPzQADwLfPn5fgbsdBoBlIcwwQvV0ByKESH9FLxPHzpRf8zWIPP3E1WeBaIYJEKazcfMg9sCK4y3CbqNF/D46BLqyCiq8uX2k0L6cMRoGlEmURP9seR+ygb73D5XeJkSSlgRdCqPC78JgB7PW7X1VGom+V18GiSbghmVmmnizwBBKgNXkt8="

script:
  - make style codecov
  - sonar-scanner -Dproject.settings=./.sonar-project.properties

jobs:
  fast_finish: true
  allow_failures:
    - go: tip
  include:
    # - stage: integration
    #   name: "Integration Tests"
    #   if: branch = main
    #   script:
    #     - make it
    - stage: tag
      name: "Tag For Release"
      if: branch = main && type = push
      before_script:
        - echo -e "machine github.com\n  login $GH_TOKEN" > ~/.netrc
      script:
        - export OLD_VERSION=$(make version)
        - git config --global user.name "xmidt-bot"
        - git config --global user.email "$BOT_EMAIL"
        - export TAG=$(cat CHANGELOG.md | perl -0777 -ne 'print "$1" if /.*## \[Unreleased\]\s+## \[(v\d+.\d+.\d+)\].*/s')
        - export TODAY=`date +'%m/%d/%Y'`
        - export NOTES=$(cat CHANGELOG.md | perl -0777 -ne 'print "$ENV{TODAY}\n\n$1\n" if /.*## \[$ENV{TAG}\]\s(.*?)\s+## \[(v\d+.\d+.\d+)\].*/s')
        - if [[ "$TAG" != "" && "$TAG" != "$OLD_VERSION" ]]; then git tag -a "$TAG" -m "$NOTES"; git push origin --tags; echo $?; fi
    - stage: release
      name: "Make a Release"
      if: branch != main
      script: skip
      before_deploy:
        - make release-artifacts
      deploy:
        on:
          all_branches: true
          tags: true
        provider: releases
        api_key: "$GH_TOKEN"
        file_glob: true
        file: ./.ignore/*
        skip_cleanup: true
    - stage: docker-release
      name: "Make Docker Release"
      if: branch != main
      script: skip
      deploy:
        - provider: script
          script: bash deploy/docker_push
          on:
            all_branches: true
            tags: true
