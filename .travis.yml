language: go

go:
  - 1.14.x
  - tip

os:
  - linux

services:
  - docker

branches:
  only:
    - main
    - /^v[0-9]+\.[0-9]+\.[0-9]+$/

addons:
  sonarcloud:
    organization: "xmidt-org"
    token:
      secure: "Hn+GuXFFYoWlzgxLMmYU8Mij3lPGOG/ZbG8BaN3T72COKdt2GHyrSBeuduJNxxiSLv5Ryu8URGc5X3gXR17MkYIXI58YN55po0L98J4RqQDXOHrZCsZ6l2MYexWAZfzdnoD3jA1vHHL/8m+ZeuxqgHNYwSybvvRQeh5oqjLF3LZU3ThYaoRlz+p/6tvO/ob8HYNAv8wTT5UXVPAbFmneggJC8Rkcz7ocDgK7yQKbcnEf3OO230i01O29ETxFXcVbvnSps6Mk1FzPxVqGvoG4Cq/Gy07Ao1PHEnJY6033RWOFOj8hfvC1GrZeDsfeh7R+UKmQUKa6o7k8IurLG+yGA4kLugeTW7r8H05GHbWSUlPddCnrCcLMFE3ev+au3YygZuv7s23SNj+RExvb35/t5+M/xV4IboVGpc5WQlM6SugLwWin7nilO7dI3pabbEjOKQ3s6+8Qr2PsDtRyGJFUbkuTz0aIytwAPTeFXjuCnM6jAvcker9ChhrDk2hEiI3nzLXa5Y34MdooDSjxBBIdlNDe7b1StaPGSCow3Y9gJfTe0Oe/QQkPRVE2i+Kql1uD0OXUtMWDfDtp+g//R7/Rpv2NxwTvz2D/iDh+dYfPLaGI0UXIayEGC4df/6TF0/HKbsToDV9AiGuiyaS4dLvvOOlCvypAr5BKa0Fb6xA2+E8="

script:
  - make style codecov

after_success:
  - sonar-scanner -Dproject.settings=./.sonar-project.properties

stages:
  - test
  - tag
  - release

jobs:
  fast_finish: true
  allow_failures:
    - go: tip
  include:
    # - stage: integration
    #   name: "Integration Tests"
    #   if: branch = main
    #   script:
    #     - make it
    - stage: tag
      name: "Tag For Release"
      if: branch = main && type = push
      before_script:
        - echo -e "machine github.com\n  login $GH_TOKEN" > ~/.netrc
      script:
        - export OLD_VERSION=$(make version)
        - git config --global user.name "xmidt-bot"
        - git config --global user.email "$BOT_EMAIL"
        - export TAG=$(cat CHANGELOG.md | perl -0777 -ne 'print "$1" if /.*## \[Unreleased\]\s+## \[(v\d+.\d+.\d+)\].*/s')
        - export TODAY=`date +'%m/%d/%Y'`
        - export NOTES=$(cat CHANGELOG.md | perl -0777 -ne 'print "$ENV{TODAY}\n\n$1\n" if /.*## \[$ENV{TAG}\]\s(.*?)\s+## \[(v\d+.\d+.\d+)\].*/s')
        - if [[ "$TAG" != "" && "$TAG" != "$OLD_VERSION" ]]; then git tag -a "$TAG" -m "$NOTES"; git push origin --tags; echo $?; fi
      after_success: skip

    - stage: release
      name: "Make a Release"
      if: branch != main
      script: skip
      before_deploy:
        - make release-artifacts
      deploy:
        on:
          all_branches: true
          tags: true
        provider: releases
        api_key: "$GH_TOKEN"
        file_glob: true
        file: ./.ignore/*
        skip_cleanup: true
    - stage: docker-release
      name: "Make Docker Release"
      if: branch != main
      script: skip
      deploy:
        - provider: script
          script: bash deploy/docker_push
          on:
            all_branches: true
            tags: true
